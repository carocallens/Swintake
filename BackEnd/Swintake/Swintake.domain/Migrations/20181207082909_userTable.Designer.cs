// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swintake.domain.Data;

namespace Swintake.domain.Migrations
{
    [DbContext(typeof(SwintakeContext))]
    [Migration("20181207082909_userTable")]
    partial class userTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Swintake.domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Swintake.domain.Users.User", b =>
                {
                    b.OwnsOne("Swintake.domain.Users.UserSecurity", "UserSecurity", b1 =>
                        {
                            b1.Property<Guid?>("UserId");

                            b1.Property<string>("AppliedSalt")
                                .HasColumnName("User_AppliedSalt");

                            b1.Property<string>("PasswordHashedAndSalted")
                                .HasColumnName("User_PasswordHashed");

                            b1.ToTable("Users");

                            b1.HasOne("Swintake.domain.Users.User")
                                .WithOne("UserSecurity")
                                .HasForeignKey("Swintake.domain.Users.UserSecurity", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
